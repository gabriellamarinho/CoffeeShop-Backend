version: '3.8'

services:
  mysql:
    image: 'mysql:8.0'
    container_name: coffee-shop-db
    environment:
      - MYSQL_DATABASE=coffee-shop-backend
      - MYSQL_ROOT_PASSWORD=Admin2
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=Admin1
    ports:
      - '3307:3306'
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - coffee-shop-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

      
# login service
  login-service:
    build:
      context: ./login-service
      dockerfile: Dockerfile
    container_name: login-service
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: coffee_shop_login
      DB_USER: myuser
      DB_PASSWORD: Admin1
    ports:
      - '3001:3000'
    networks:
      - coffee-shop-net

# wishlist service
  wishlist-service:
    build:
      context: ./wishlist-service
      dockerfile: Dockerfile
    container_name: wishlist-service
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: coffee_shop_wishlist
      DB_USER: myuser
      DB_PASSWORD: Admin1
    ports:
      - '3002:3000'
    networks:
      - coffee-shop-net

# invoice service
  invoice-service:
    build:
      context: ./invoice-service
      dockerfile: Dockerfile
    container_name: invoice-service
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: coffee_shop_invoice
      DB_USER: myuser
      DB_PASSWORD: Admin1
    ports:
      - '3003:3000'
    networks:
      - coffee-shop-net

# catalog service

  product-catalog-service:
    build:
      context: ./product-catalog-service
      dockerfile: Dockerfile
    container_name: product-catalog-service
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: coffee_shop_catalog
      DB_USER: myuser
      DB_PASSWORD: Admin1
    ports:
      - '3004:3000'
    networks:
      - coffee-shop-net

# api service

  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    container_name: api-service
    depends_on:
      - login-service
      - wishlist-service
      - invoice-service
      - product-catalog-service
    ports:
      - '3000:3000'
    networks:
      - coffee-shop-net

volumes:
  db_data:

networks:
  coffee-shop-net: